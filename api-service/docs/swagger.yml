swagger: '2.0'
info:
  description: Node.js API which retrieves stock information
  version: 1.0.0
  title: API Service
  contact:
    email: gabbanaesteban@gmail.com
host: localhost:3002
basePath: /
tags:
  - name: Auth
  - name: Stocks
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    in: header
    name: Authorization
paths:
  /register:
    post:
      tags:
        - Auth
      summary: Register a user
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: User data
          type: object
          properties: 
            email:
              type: string
              example: gabbanaesteban@gmail.com
            password:
              type: string
              example: test
      responses:
        '201':
          description: Ok
          schema:
            $ref: '#/definitions/AuthResponse'
        '400':
          description: Bad Request
          schema:
            type: object
            properties: 
              error:
                type: string
                example: Email is required

  /signin:
    post:
      tags:
        - Auth
      summary: Sign In a user
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: User data
          type: object
          properties: 
            email:
              type: string
              example: gabbanaesteban@gmail.com
            password:
              type: string
              example: test
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/AuthResponse'
        '400':
          description: Bad Request
          schema:
            type: object
            properties: 
              error:
                type: string
                example: Email is required
        '404':
          description: Not Found
          schema:
            type: object
            properties: 
              error:
                type: string
                example: User not found

  /stocks:
    get:
      security:
          - Bearer: []
      tags:
        - Stocks
      summary: Get stock information based on its symbol
      produces:
        - application/json
      parameters:
        - in: query
          name: q
          required: true
          type: string
          description: Symbol of the requested stock
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Stock'
        '401':
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
                example: Invalid token
        '400':
          description: Bad Request
          schema:
            properties:
              error:
                type: string
                example: q is required

  /history:
    get:
      security:
          - Bearer: []
      tags:
        - Stocks
      summary: Get user stock requests history
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items: 
              $ref: '#/definitions/StockHistory'
        '401':
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
                example: Invalid token

  /stats:
    get:
      security:
          - Bearer: []
      tags:
        - Stocks
      summary: Get stats for stocks requests
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items: 
              type: object
              properties: 
                stock:
                  type: string
                  example: aapl.us
                times_requested:
                  type: number
                  example: 5
        '401':
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
                example: Invalid token
        '403':
          description: Forbidden
          schema:
            properties:
              error:
                type: string
                example: You are not allowed to access this resource

definitions:
  Stock:
    type: object
    properties:
      symbol:
        type: string
        example: "AAPL.US"
      open:
        type: string
        example: "148.97"
      high:
        type: string
        example: "149.4444"
      low:
        type: string
        example: "148.27"
      close:
        type: string
        example: "149.1"
      name:
        type: string
        example: "APPLE"

  StockHistory:
    allOf:
      - $ref: '#/definitions/Stock'
      - type: object
    properties:
      date:
        type: string
        example: "2021-04-01T19:20:30Z"

  AuthResponse:
    type: object
    properties: 
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjI5MTAwMDM2LCJleHAiOjE2MzY4NzYwMzZ9.TeSvwgyWlhKWkDi6WhBHDSXPjiW54cqX80ubSknKxWQ
